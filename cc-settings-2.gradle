project.apply plugin: 'cc-register'
project.dependencies.add('api', "com.billy.android:cc:2.1.6")

repositories {
    maven { url rootProject.file("repo-local") }
    maven { url "${artifactory_contextUrl}/${artifactory_snapshot_repoKey}" }
    maven { url "${artifactory_contextUrl}/${artifactory_release_repoKey}" }
    maven { url 'http://localhost:8081/nexus/content/groups/android_public/' }
    google()
    jcenter()
    mavenCentral()
}

android {
    compileSdkVersion rootProject.compileVersion

    signingConfigs {//签名配置
        release {//发布版签名配置
            storeFile rootProject.file("kk.jks")//密钥文件路径
            storePassword "dong316727"//密钥文件密码
            keyAlias "kk"//key别名
            keyPassword "dong316727"//key密码
        }
    }

    buildTypes {
        def networkEnvType = networkEnvType as String
        release {
            minifyEnabled true // 开启混淆
            zipAlignEnabled true //字节对齐，运行效果更好
            signingConfig signingConfigs.release//设置签名信息
            buildConfigField("String", "networkEnvType", "\"" + networkEnvType + "\"")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false // 关闭混淆
            zipAlignEnabled true//字节对齐，运行效果更好
            shrinkResources false//去除无用资源
            signingConfig signingConfigs.release//设置签名信息
            buildConfigField("String", "networkEnvType", "\"" + networkEnvType + "\"")
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    if (project.ext.has('runAsApp') && project.ext.runAsApp) {
    }
}

//也可以按照上述格式继续添加你自己的自动注册需求，俗称：搭顺风车
ccregister.registerInfo.add(
        [
                'scanInterface'          : 'com.kk.app.lib.rv.IFloorHolderFactory'
                , 'scanSuperClasses'     : ['com.kk.app.lib.rv.BaseFloorHolderFactory']
                , 'codeInsertToClassName': 'com.kk.app.lib.rv.FloorViewHolderMaker'
                , 'registerMethodName'   : 'registerFloorFactory'
        ]
)
ccregister.registerInfo.add(
        [
                'scanInterface'          : 'com.kk.app.web.function.register.IFunctionRegisterManager'
                , 'codeInsertToClassName': 'com.kk.app.web.FunctionRegister'
                , 'registerMethodName'   : 'autoRegisterFunction'
        ]
)
ccregister.registerInfo.add(
        [
                'scanInterface'          : 'com.kk.app.lib.widget.component.IComponentInit'
                , 'codeInsertToClassName': 'com.kk.app.lib.widget.component.ComponentManager'
                , 'registerMethodName'   : 'register'
        ]
)


